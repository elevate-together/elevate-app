datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String            @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  prayerGroups  UserPrayerGroup[] @relation("UserToPrayerGroup")
  accounts      Account[]
  ownedPrayerGroups   PrayerGroup[] 
}

model PrayerGroup {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String?
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  users        UserPrayerGroup[]  @relation("UserToPrayerGroup")
  ownerId      String             @db.ObjectId
  owner        User               @relation(fields: [ownerId], references: [id]) // Relation to User model
}

model UserPrayerGroup {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  userId        String @db.ObjectId
  prayerGroupId String @db.ObjectId

  user        User        @relation("UserToPrayerGroup", fields: [userId], references: [id])
  prayerGroup PrayerGroup @relation("UserToPrayerGroup", fields: [prayerGroupId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, prayerGroupId]) // Ensure uniqueness in many-to-many relationships
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.String
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
